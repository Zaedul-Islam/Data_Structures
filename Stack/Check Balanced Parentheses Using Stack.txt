// Check Balanced Parentheses Using Stack

#include<iostream>
#include<stack>
#include<string>
using namespace std;




//checks if parentheses are balanced or not
bool IsBalancedParantheses(string exp)
{
	stack<char> S;
	for (int I = 0; I < exp.length(); I++)
	{
		if (exp[I] == '(' || exp[I] == '{' || exp[I] == '[')
			S.push(exp[I]);
		else if (exp[I] == ')' || exp[I] == '}' || exp[I] == ']')
		{
			if (S.top() == '(' && exp[I] == ')')
				S.pop();
			else if (S.top() == '{' && exp[I] == '}')
				S.pop();
			else if (S.top()== '[' && exp[I] == ']')
				S.pop();
		}

	}

	return S.empty() ? true : false;
}



int main()
{
	string expression;

	cout << "Enter an expression to check: ";
	cin >> expression;

	if (IsBalancedParantheses(expression))
		cout << "Expression is balanced.\n";

	else
		cout << "Expression is not balanced.\n";

}
